cmake_minimum_required(VERSION 2.8)
find_package(OpenGL)
find_package(GLUT)
FIND_PACKAGE(VTK)
INCLUDE(${VTK_USE_FILE})
FIND_PACKAGE(Qt4 REQUIRED)
link_directories(${VTK_LIBRARY_DIRS})
link_directories(${QT_LIBRARY_DIR})
INCLUDE(${QT_USE_FILE})
find_package(OpenMP)
if(OPENMP_FOUND)
message("color openmp")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()
INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIRS}  ${GLUT_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/IO)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/VTK)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/QT)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/MeshData)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/Algorithm)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/Common)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/3rd)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/Color)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/Opengl)
#SET(DIFF_SOURCES *.cpp)
#SET(DIFF_HEADER  *.h)
FILE(GLOB HEADFILE *.h)
FILE(GLOB SOURCEFILE *.cpp)
SET(main_srcs main.cpp)
#SET(CMAKE_BUILD_TYPE = Debug)
ADD_EXECUTABLE(zbuffer ${main_srcs} ${HEADFILE} ${SOURCEFILE})
#if(MINGW)
TARGET_LINK_LIBRARIES(zbuffer
  glut
  GLU
  GL 
  glut
  GLEW
  stdc++
  VtkAlgs
  SqiMeshData
  vtk_model_data
  SqiCommonFacade
  )
#ADD_LIBRARY(SqiGL STATIC ${HEADFILE} ${SOURCEFILE})
#TARGET_LINK_LIBRARIES(SqiGL
#  glut
#  GLU
#  glut
#  GLEW
#  stdc++
#)
